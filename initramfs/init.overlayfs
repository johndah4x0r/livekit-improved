#!/bin/sh
# Initial script for Live Kit Improved (OverlayFS)
# Based on the originial Live Kit Init, rewritten for OverlayFS
# Orig. author: Tomas M <http://www.linux-live.org/>
# Author: @johndah4x0r <terencedoesmc12 AT gmail.com>

# Export/declare new PATH
NEWPATH=.:/:/usr/sbin:/usr/bin:/sbin:/bin
export PATH="$NEWPATH"

# Source Live Kit library script
. /lib/.config
. /lib/livekitlib

# Declare start of 'init' state
clear
echo_sign "INIT START"

# Run switch_root: initramfs -> tmpfs
transfer_initramfs

# Directory variables pointing to /memory
MEMORY=/memory
CHANGES="$MEMORY"/changes
UNION="$MEMORY"/union
DATAMNT="$MEMORY"/data
BUNDLES="$MEMORY"/bundles

# Initliaise /proc, /sys and such
init_proc_sysfs

# Initialise debugging if requested
debug_start
dbgsh_start


# 1st debug shell interval
debug_shell

# Initialise important kernel modules
init_devs
modprobe_overlay
init_zram

# Then, modprobe everything
modprobe_everything

# 2nd debug shell interval
debug_shell

# Find data dir with filesystem bundles
# NEW:
# Only 15 seconds before timeout, to minimize the
# pain of waiting a "whole" minute.
#
DATA="$(find_data 15 "$DATAMNT")"

# 3rd debug shell interval
debug_shell

# Setup persistent changes
persistent_changes "$DATA" "$CHANGES"

# 4th debug shell interval
debug_shell

# Copy data to RAM if requested by user
DATA="$(copy_to_ram "$DATA" "$CHANGES")"

# 5th debug shell interval
debug_shell

# Prepare overlay "union"
prepare_overlay "$DATA" "$BUNDLES" "$CHANGES" "$UNION"

# 6th debug shell interval
debug_shell

# Copy contents of 'rootcopy/'
copy_rootcopy_content "$DATA" "$UNION"

# Generate a basic 'fstab' with the core filesystems
fstab_create "$UNION"

# 7th and final debug shell interval
debug_shell

# Declare the end of first 'init' state
clear
echo_sign "INIT END"

# Change root to main OS and let the 'init' in the
# main OS do the rest...
change_root "$UNION"

# < ======== NOTHING SHOULD GO OVER THIS LINE! ======== >
panic "Bug attack!"
